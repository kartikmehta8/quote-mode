{"version":3,"sources":["contexts/ThemeContext.js","contexts/AuthContext.js","components/Navbar.js","contexts/QuoteContext.js","components/QuoteList.js","components/ThemeToggle.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","Provider","value","this","props","children","Component","AuthContext","AuthContextProvider","isAuthenticated","toggleAuth","Navbar","useContext","theme","style","background","color","onClick","QuoteContext","QuoteContextProvider","useState","title","id","quotes","QuoteList","className","map","quote","ThemeToggle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEaA,EAAeC,0BAuBbC,E,4MApBdC,MAAQ,CACPC,cAAc,EACdC,MAAO,CAAEC,OAAQ,OAAQC,GAAI,OAAQC,GAAI,QACzCC,KAAM,CAAEH,OAAQ,OAAQC,GAAI,OAAQC,GAAI,S,EAGzCE,YAAc,WACb,EAAKC,SAAS,CAAEP,cAAe,EAAKD,MAAMC,gB,4CAE3C,WACC,OACC,cAACJ,EAAaY,SAAd,CACCC,MAAK,2BAAOC,KAAKX,OAAZ,IAAmBO,YAAaI,KAAKJ,cAD3C,SAGEI,KAAKC,MAAMC,e,GAfmBC,aCFtBC,EAAcjB,0BAqBZkB,E,4MAlBdhB,MAAQ,CACPiB,iBAAiB,G,EAGlBC,WAAa,WACZ,EAAKV,SAAS,CAAES,iBAAkB,EAAKjB,MAAMiB,mB,4CAE9C,WACC,OACC,cAACF,EAAYN,SAAb,CACCC,MAAK,2BAAOC,KAAKX,OAAZ,IAAmBkB,WAAYP,KAAKO,aAD1C,SAGEP,KAAKC,MAAMC,e,GAbkBC,aCyDnBK,EAzBA,WACd,MAAsCC,qBAAWvB,GAAzCI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,MAAOI,EAA7B,EAA6BA,KAC7B,EAAwCc,qBAAWL,GAA3CE,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WACnBG,EAAQpB,EAAeC,EAAQI,EACrC,OACC,sBAAKgB,MAAO,CAAEC,WAAYF,EAAMjB,GAAIoB,MAAOH,EAAMlB,QAAjD,UACC,4CACA,qBAAKsB,QAASP,EAAd,SACED,EAAkB,YAAc,gBAElC,+BACC,6BACC,6CAED,6BACC,4CAED,6BACC,iD,OCpDQS,EAAe5B,0BAgCb6B,EA9Bc,SAACf,GAC7B,MAA4BgB,mBAAS,CACpC,CACCC,MACC,yFACDC,GAAI,GAEL,CACCD,MACC,sFACDC,GAAI,GAEL,CACCD,MACC,4EACDC,GAAI,GAEL,CACCD,MACC,oEACDC,GAAI,KAnBN,mBAAOC,EAAP,UAsBA,OACC,cAACL,EAAajB,SAAd,CAAuBC,MAAO,CAAEqB,UAAhC,SACEnB,EAAMC,YCkBKmB,EAtBG,WACjB,MAAsCZ,qBAAWvB,GAAzCI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,MAAOI,EAA7B,EAA6BA,KACrByB,EAAWX,qBAAWM,GAAtBK,OACFV,EAAQpB,EAAeC,EAAQI,EACrC,OACC,qBACC2B,UAAU,aACVX,MAAO,CAAEE,MAAOH,EAAMlB,OAAQoB,WAAYF,EAAMhB,IAFjD,SAIC,6BACE0B,EAAOG,KAAI,SAACC,GACZ,OACC,oBAAmBb,MAAO,CAAEC,WAAYF,EAAMjB,IAA9C,SACE+B,EAAMN,OADCM,EAAML,YChBNM,EATK,WACnB,IAAQ7B,EAAgBa,qBAAWvB,GAA3BU,YACR,OACC,wBAAQ0B,UAAU,eAAeR,QAASlB,EAA1C,+BCWa8B,E,4JAjBd,WACC,OACC,qBAAKJ,UAAU,MAAf,SACC,cAAC,EAAD,UACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,UACC,cAAC,EAAD,MAED,cAAC,EAAD,e,GAVYnB,aCIHwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAGzBb,M","file":"static/js/main.3abb4015.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends Component {\r\n\tstate = {\r\n\t\tisLightTheme: true,\r\n\t\tlight: { syntax: '#555', ui: '#ddd', bg: '#eee' },\r\n\t\tdark: { syntax: '#ddd', ui: '#333', bg: '#555' },\r\n\t};\r\n\r\n\ttoggleTheme = () => {\r\n\t\tthis.setState({ isLightTheme: !this.state.isLightTheme });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ThemeContext.Provider\r\n\t\t\t\tvalue={{ ...this.state, toggleTheme: this.toggleTheme }}\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</ThemeContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { Component, createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nclass AuthContextProvider extends Component {\r\n\tstate = {\r\n\t\tisAuthenticated: false,\r\n\t};\r\n\r\n\ttoggleAuth = () => {\r\n\t\tthis.setState({ isAuthenticated: !this.state.isAuthenticated });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AuthContext.Provider\r\n\t\t\t\tvalue={{ ...this.state, toggleAuth: this.toggleAuth }}\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</AuthContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\n// class Navbar extends Component {\r\n// \tstatic contextType = ThemeContext;\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<AuthContext.Consumer>\r\n// \t\t\t\t{(authContext) => (\r\n// \t\t\t\t\t<ThemeContext.Consumer>\r\n// \t\t\t\t\t\t{(themeContext) => {\r\n// \t\t\t\t\t\t\tconst { isAuthenticated, toggleAuth } = authContext;\r\n// \t\t\t\t\t\t\tconst { isLightTheme, light, dark } = themeContext;\r\n// \t\t\t\t\t\t\tconst theme = isLightTheme ? light : dark;\r\n// \t\t\t\t\t\t\treturn (\r\n// \t\t\t\t\t\t\t\t<nav style={{ background: theme.ui, color: theme.syntax }}>\r\n// \t\t\t\t\t\t\t\t\t<h1>Context App</h1>\r\n// \t\t\t\t\t\t\t\t\t<div onClick={toggleAuth}>\r\n// \t\t\t\t\t\t\t\t\t\t{isAuthenticated ? 'Logged In' : 'Logged Out'}\r\n// \t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t<ul>\r\n// \t\t\t\t\t\t\t\t\t\t<li>Home</li>\r\n// \t\t\t\t\t\t\t\t\t\t<li>About</li>\r\n// \t\t\t\t\t\t\t\t\t\t<li>Contact</li>\r\n// \t\t\t\t\t\t\t\t\t</ul>\r\n// \t\t\t\t\t\t\t\t</nav>\r\n// \t\t\t\t\t\t\t);\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t</ThemeContext.Consumer>\r\n// \t\t\t\t)}\r\n// \t\t\t</AuthContext.Consumer>\r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\nconst Navbar = () => {\r\n\tconst { isLightTheme, light, dark } = useContext(ThemeContext);\r\n\tconst { isAuthenticated, toggleAuth } = useContext(AuthContext);\r\n\tconst theme = isLightTheme ? light : dark;\r\n\treturn (\r\n\t\t<nav style={{ background: theme.ui, color: theme.syntax }}>\r\n\t\t\t<h1>Quote Mode</h1>\r\n\t\t\t<div onClick={toggleAuth}>\r\n\t\t\t\t{isAuthenticated ? 'Motivated' : 'Demotivated'}\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<strong>NEVER</strong>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<strong>GIVE</strong>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<strong>UP</strong>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const QuoteContext = createContext();\r\n\r\nconst QuoteContextProvider = (props) => {\r\n\tconst [quotes, setQuotes] = useState([\r\n\t\t{\r\n\t\t\ttitle:\r\n\t\t\t\t'When something is important enough, you do it even if the odds are not in your favour.',\r\n\t\t\tid: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle:\r\n\t\t\t\t'You should take the approach that youâ€™re wrong. Your goal is to be less wrong.',\r\n\t\t\tid: 2,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle:\r\n\t\t\t\t'You get paid in direct proportion to the difficulty of problems you solve',\r\n\t\t\tid: 3,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle:\r\n\t\t\t\t'It is possible for ordinary people to choose to be extraordinary.',\r\n\t\t\tid: 4,\r\n\t\t},\r\n\t]);\r\n\treturn (\r\n\t\t<QuoteContext.Provider value={{ quotes }}>\r\n\t\t\t{props.children}\r\n\t\t</QuoteContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default QuoteContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { QuoteContext } from '../contexts/QuoteContext';\r\n\r\n//class QuoteList extends Component {\r\n//\tstatic contextType = ThemeContext;\r\n//\r\n//\trender() {\r\n//\t\tconst { isLightTheme, light, dark } = this.context;\r\n//\t\tconst theme = isLightTheme ? light : dark;\r\n//\t\treturn (\r\n//\t\t\t<div\r\n//\t\t\t\tclassName='book-list'\r\n//\t\t\t\tstyle={{ color: theme.syntax, background: theme.bg }}\r\n//\t\t\t>\r\n//\t\t\t\t<ul>\r\n//\t\t\t\t\t<li style={{ background: theme.ui }}>Oliver Twist</li>\r\n//\t\t\t\t\t<li style={{ background: theme.ui }}>Adventure of Tom Sawyer</li>\r\n//\t\t\t\t\t<li style={{ background: theme.ui }}>Adventure of Huckleberry Fin</li>\r\n//\t\t\t\t</ul>\r\n//\t\t\t</div>\r\n//\t\t);\r\n//\t}\r\n//}\r\n\r\nconst QuoteList = () => {\r\n\tconst { isLightTheme, light, dark } = useContext(ThemeContext);\r\n\tconst { quotes } = useContext(QuoteContext);\r\n\tconst theme = isLightTheme ? light : dark;\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='quote-list'\r\n\t\t\tstyle={{ color: theme.syntax, background: theme.bg }}\r\n\t\t>\r\n\t\t\t<ul>\r\n\t\t\t\t{quotes.map((quote) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={quote.id} style={{ background: theme.ui }}>\r\n\t\t\t\t\t\t\t{quote.title}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuoteList;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\n// class ThemeToggle extends Component {\r\n// \tstatic contextType = ThemeContext;\r\n\r\n// \trender() {\r\n// \t\tconst { toggleTheme } = this.context;\r\n// \t\treturn <button onClick={toggleTheme}>Toggle the theme</button>;\r\n// \t}\r\n// }\r\n\r\nconst ThemeToggle = () => {\r\n\tconst { toggleTheme } = useContext(ThemeContext);\r\n\treturn (\r\n\t\t<button className='toggle-theme' onClick={toggleTheme}>\r\n\t\t\tToggle the Theme\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport QuoteList from './components/QuoteList';\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport ThemeToggle from './components/ThemeToggle';\nimport AuthContextProvider from './contexts/AuthContext';\nimport QuoteContextProvider from './contexts/QuoteContext';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<ThemeContextProvider>\n\t\t\t\t\t<AuthContextProvider>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<QuoteContextProvider>\n\t\t\t\t\t\t\t<QuoteList />\n\t\t\t\t\t\t</QuoteContextProvider>\n\t\t\t\t\t\t<ThemeToggle />\n\t\t\t\t\t</AuthContextProvider>\n\t\t\t\t</ThemeContextProvider>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}